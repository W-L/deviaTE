import logging
import argparse
from pathlib import Path
from types import SimpleNamespace

import requests

from deviaTE.utils import init_logger, read_fa


# Sequences of the single copy genes in Dmel
# If the default library is used, these are added to the fasta
SCG = """>Dmel_rpl32
TATTTTTATTATTCAACTCATATATTTCAGTTTTCACACCCTGTTCCATTCCCACCGTTCCGTTCCTGGCATCAATCGGCATCGTTCGCCAGCCCTGGTGGGCATTATGCCATGGTTGCATTTCACGCATTTTAGTATAGCTTCCGATATTCATCATTTTGCCAACTCTATTAAATTTCATACACAATTTAAAAGATTGTAAACAAACGCCGCACGAAACGGAATCGCTAAAAGGACCATCGTCGGCGCAATGGATACTTGCTTCTTCTGCGGCGCCGTCGATCTGAGCGACACGGGCTCCTCCAGCTCCATGCGCTACGAGACGCTGTCGGCCAAGGTGCCGTCGTCGCAGAAAACAGTGTCCCTGGTGCTCACCCACCTGGCCAACTGCATCCAGACGCAGCTGGACCTGAAGCCCGGCGCCCGGCTGTGCCCGCGCTGCTTTCAGGAGCTCTCCGACTACGACACGATCATGGTGAACCTGATGACCACCCAGAAGAGGCTGACGACCCAGCTAAAGGGCGCTCTAAAGTCCGAGTTCGAGGTGCCGGAGTCCGGCGAGGACATACTCGTGGAGGAGGTGGAGATACCCCAAAGCGATGTCGAGACAGACGCCGATGCCGAGGCGGACGCCCTGTTCGTGGAGCTGGTCAAGGATCAGGAGGAGTCCGACACGGAGATAAAGAGAGAGTTCGTGGACGAGGAGGAGGAGGAGGACGACGACGACGACGACGAGTTCATCTGCGAGGACGTGGATGTGGGCGACTCCGAGGCCCTGTATGGCAAGTCCTCCGATGGCGAGGACAGGCCGACGAAGAAGCGCGTCAAGCAGGAGTGCACTACCTGCGGCAAGGTGTACAACTCCTGGTATCAACTGCAGAAGCACATCAGCGAGGAGCACTCCAAGCAGCCCAACCACATCTGCCCCATCTGCGGGGTGATCCGGCGCGACGAGGAGTACTTGGAGCTGCACATGAATCTGCACGAGGGCAAGACGGAAAAGCAATGCCGCTACTGCCCCAAGAGCTTCTCGCGCCCGGTGAACACCCTGCGCCACATGCGCATGCACTGGGACAAGAAGAAGTACCAGTGCGAGAAGTGCGGCCTGAGGTTCTCCCAGGACAACCTACTCTACAACCACCGGCTGCGCCACGAGGCTGAGGAGAACCCCATCATATGCAGCATCTGCAATGTGTCGTTCAAGTCGCGCAAGACCTTCAACCATCACACGCTCATTCACAAGGAGAACCGCCCAAGACACTACTGCTCCGTCTGCCCCAAGTCCTTCACCGAGCGCTACACCCTCAAGATGCACATGAAGACCCACGAGGGCGACGTCGTTTACGGGGTTCGCGAGGAGGCGCCCGCCGACGAGCAGCAGGTGGTGGAGGAGCTGCATGTGGACGTCGACGAATCGGAGGCGGCCGTCACCGTCATCATGTCCGACAACGATGAGAACAGCGGCTTCTGTCTCATTTGCAATACCAACTTCGAGAACAAGAAGGAGCTCGAACACCACTTGCAATTTGATCACGACGTGGTCTTGAAATAAGCTACATTGCCTACAATAAGTAATTGTTTATCTTTCCCTAGTGTATTTCCTCCTCTTTGTACTTGATTATTGTAGATTCCTACAAAATATAATTTACTGGTATTTCAATTACTGCGTTTCATTTAGACAGAAGCATTTCCGATAATAATTGTACACTGTTCTGTAAAAATAATTGCGAATATATATATGATTTCATATAAACAACCTCTTTCAATACTAAGGGGGAAAAATGTAAAATATATAACAAAATTCCCTGATAAGGATTGATGCTGTCTAGTTTTGGCACGTCAAGGAATTTATATTGGTCTAATATCTCGAGGCAGTTGCTATCAGAAAGAAAGACCGCAATGGTCTGGATTAACTGATATCCATCCAGATAATGCACATGTTATCAATGGTGCTGCTATCCCAATCTCAGAAATGACAATTGAACTCGGCACTCGCACATCATTTTTTAACTAAAAGTCCGGTATATTAACGTTTACAAATGTGTATTCCGACCACGTTACAAGAACTCTCAAGAATCTTAAGCTTACTCGTTCTCTTGAGAACGCAGGCGACCGTTGGGGTTGGTGAGGCGGACCGACAGCTGCTTGGCGCGCTCGACAATCTCCTTGCGCTTCTTGGAGGAGACGCCGTGGGCGATCTCGCCGCAGTAAACGCGGTTCTGCATGAGCAGGACCTCCAGCTCGCGCACGTTGTGCACCAGGAACTTCTTGAATCCGGTGGGCAGCATGTGGCGGGTGCGCTTGTTCGATCCGTAACCGATGTTGGGCATCAGATACTGTCCCTTGAAGCGGCGACGCACTCTGTTGTCGATACCCTTGGGCTTGCGCCATTTGTGCTGCAAGGAGACATGTTGATTAAACACGGGTACAATTTGGCACAATCCTCGTTGGCACTCACCGACAGCTTAGCATATCGATCCGACTGGTGGCGGATGAAGTGCTTGGTGCGCTTCTTCACGATCTTGGGCCTGTATGCTGGGCGGATGGTCATCTTGAAGCTGGAAGGACACAACAAAAGTAGCCATTAGTGCACTGACCCACTGGAAATATCACTTATCAAGCTAATAACACACAAGGTGTCCCACTAATGCATAATTCAACCAGGTTGGGCTAGCTTCTTGGGCAGTATCCATTGAGTTTCCGGTGTGTCGCCCCACGAATTCCCATCACAAACAGAAGCCATTTGGCGAACTCTCACAGGAATCGATCCGAATTCGGTCGAAATACGAGCCGCACACTTGCGAACAGCGCACGGACTAACGCAGTTCAACTCGAAACCGCCAAAAACGACAATTACGGCTTAAAATTAATGGAAATACACGTGGGCCCAAAATCACGCACATACCTTGCCGGAAACCAGAAGCGAAAAGAAAAAGCTGGTGGTGTGAAAAAACATCGATACGTCGTGCGTCGATGATTCGCCGATAGTTTCGTTCATGGCGATGCCAAGCGATATATTGCGGATCATCGTGTAATGAATTTAAACTTGGGCGCGTCAAATAAGGTGTTGCAGGTTTAATCACTATCCGAGCAACTGCGACGATTGCAACTATGTGCAACAAAATATGGAACTATTTTCAGCTTGGTGGAGTTTGTTATATAATTAAATATGCTTTGCCTCTTGACCCACTGTGCAGTGTGAACATATTTCATTTACACACTGGATGCAACAGCTGTTCAATAGATGTTTTGCAGCACCGTCATCTGATAAAAAACGATAAGAAAGCTGGGAATGAAAAAGTAAAAAGCTGACAGAAGCGATCAAGGAGCAGGTGTTCCCGAGGTTTAGGAGGCTAATACAAAAGCATCCAAGTCGTGGATTTAGAGCACCCAATGCATACCAGCACATGATAAGTTTCTGATCCATAGGGTGGTCTTTGCGTCAGTGGAACAAGTACACAGGGTGATTCGGTCAAAATAAAGTGACAGTGCTGTTAAACGCACTGCTAAGAATATTTTAATTATACGGTGTTATATTAAGTTTGTAAATTACCGAAAAGGGCGAGTACAAAACTCAAAGCCGCCGCTGCTAATTTAAGTTCGACAATTAATTTTGGTTGGCTTGTGAACAATTTGGATAACAGAGTCCTTTGGTATGCAGCAGAGGTCCAGCGACGGTCACACTGGCCGTGGCCGTCAAACCGTGGTTCTTCTTCATTATTATATAATTAAAACCGATGCGAATCGAAACCAAAACAAACCAAACCAGCGCAATCCCCGTGTTTGAATAGTTACAATGGTAACGCGGTGACAAATGCGCACTTCTCCACACGCCCGAAATAAACACAGGACAGCAGCAAGATGAAAGACGATGGAGCACCAAACGTCGCGAAAACCACCGACCCACCGCCCCCTAAAAGGTTTCCATCCGGAAGAGCACACAGCCCACATGGAGACGGGGAGGCGGGGAAACTGCTGCATGGCAGCGTCTTCTCGAAGCGCTTCTTCGGCTCCTTTCAGTGGGAGGAGTTCGCCTGCGGCTGCGGAGCAGCCTTCGTCAACATCGCGGTCACCTATCCCATCTACAAGATGATCTTCCGTCAGATGCTGCACGGCGTGCCCATCACCTCGGCCTTTGCACAGCTGCGTCACGAGGGACTGGGCTTCCTGTACCGCGGCATGCTGCCGCCGCTCGCCCAGAAGACCATATCCCTGTCCATCATGTTCGGTGTGTTCGACGGGACGAGGAGGTACCTCGTGGAGGACTACCGCCTGAACGACTACGGGGCCAAGGTGCTAGCGGCCGTGGTGGCCGGCAGCGCCGAGTCCATCCTCCTGCCCTTCGAACGGGTGCAAACCCTCCTCGCGGACTCCAAGTTCCACCAGCACTTCTCCAACACACAAAACGCATTCAGGTGAGCTGACGGATCTTTAAGTTTGCTAATGGGATCTTCTTATGGCTTTTAATCATTCCACAGGTATGTGGTTTCCCACCACGGCTACCGGGAGCTCTACAGGGGACTCGAACCAGTATTTTGGCGCAACGGCCTGTCCAACGCGTTATTTTTCGTACTGCGAGAAGAGGCCAGCGTCCGGCTGCCTAAGAGAGTGAGTGTTGACCCTATCACACATACGAACCTACTAAGATACTAACCAATCCGTTGCCCATCCACAGAAATCCGTATCCACTCGAACAGTGCAGGAGTTCATAGCGGGCGCCGTGATCGGTGCGAGCATAAGCACAATATTCTACCCGCTCAATGTGATCAAGGTGTCGCTGCAGAGTGAGATGGGCCAGAGGTCTGAGGGCAGCTGGCAGGCGTGCAAGCGAATTTACGTAGAGCGCGATCGCCGCATTGGCAACTTCTATCGCGGATGCCCCTTCAACACAGGCCGCTCCTTCATCAGCTGGGGCATCATGAATACGGCGTAC
>Dmel_RpII140
CCGTTTACCAACACAGCACAACGCCGCTAATCGCGTTGTCGGCAAACATTTGTTGTGAAATTTTCTACGTTTTTACAATTTAATTCATTGCAAATCCAATTTATTGTTATTTACTTGAACGCATAAAGTGCTTCTGCACTTTAGAAAACTGAAATCATGATGTACGACAACGAGGAAGGTGAGTAAAATGAATTGCGAAAATTTGTGCATGCACGTTGGCGTGTACCAAAATTAATATGGCGGCTGGAGCGCTAGGGCTCCGCATTGTTAGCAATGAATTTCAATGGTCAAATAACATCTTGCAGAACTGTACGAGGAGGAGAATGCCGAGGAGATCTCTCACGAGCTGTGGCAGGAAGCCTGCTGGATCGTGATTAACGCGTACTTCGACGAGAAGGGCTTGGTGCGGCAGCAGCTGGACAGTTTCGATGAGTTCATTCAGATGTCGGTGCAGCGCATTGTGGAGGATTCCCCCGCCATTGAGTTGCAGGCGGAAGCGCAGCACACATCCGGAGAGGTGGAAACCCCGCCCAGATTCTCGCTGAAATTCGAGCAAATCTATCTTTCCAAGCCAACACATTGGGAAAAGGATGGTTCGCCCAGTCCTATGATGCCGAACGAGGCCCGCCTGCGAAATCTAACTTACTCCGCTCCTCTCTACGTGGACATTACGAAAACCAAGAATGTCGAGGGCCTGGATCCCGTGGAAACGCAGCATCAAAAGACTTTCATAGGCAAGATTCCCATCATGTTGAGATCAACGTACTGTTTGCTATCACAGCTTACTGATCGTGATCTTACGGAGCTGAACGAGTGCCCGTTGGATCCCGGTGGCTACTTCATCATCAACGGCTCCGAGAAGGTGCTAATTGCCCAAGAGAAAATGGCCACCAACACAGTGTACGTGTTCAGCATGAAAGATGGCAAGTATGCCTTTAAGACTGAGATTCGGTCGTGTTTGGAGCACAGTTCCAGACCCACGTCTACACTGTGGGTAAACATGATGGCAAGAGGATCGCAAAACATAAAAAAGTCAGCCATTGGTCAGAGGATTATTGCCATCTTACCGTACATCAAACAGGAGATACCCATTATGATTGTGTTTCGAGCATTGGGCTTCGTGGCCGATCGCGATATTCTGGAGCATATCATCTATGACTTCGACGATCCCGAGATGATGGAAATGGTGAAACCTTCTCTGGACGAGGCTTTTGTAGTCCAAGAGCAGAATGTTGCCTTGAATTTCATTGGAGCTAGAGGAGCACGTCCCGGAGTCACAAAAGACAAGCGTATAAAGTACGCTAAGGAAATTTTGCAAAAGGAAATGCTGCCCCACGTTGGAGTATCCGATTTCTGCGAGACCAAGAAGGCATACTTTTTGGGCTACATGGTTCACCGGCTGCTCTTAGCCTCTTTGGGCAGGAGAGAACTCGATGATCGAGATCACTATGGAAACAAGCGACTTGATCTCGCTGGACCCCTCCTGGCCTTCCTCTTCCGTGGTCTGTTCAAAAACCTGATGAAAGAGGTGCGCATGTACACACAGAAGTTCATCGATCGCGGAAAGGACTTCAACCTTGAACTGGCCATCAAGACTAATATTATTACTGATGGTTTAAGGTATTCCTTGGCCACTGGCAATTGGGGCGACCAGAAGAAGGCGCATCAGGCGAGAGCCGGTGTCTCCCAGGTGTTGAATCGCTTGACCTTCGCCTCTACTCTTTCCCATTTGCGGCGTGTGAATTCGCCAATTGGCAGAGACGGTAAACTGGCCAAACCTCGTCAGTTGCACAATACTCTTTGGGGTATGTTGTGTCCCGCTGAAACTCCTGAGGGAGCAGCTGTTGGTCTGGTGAAGAACCTGGCGCTCATGGCTTACATTTCTGTGGGATCACAACCTTCTCCCATTCTGGAGTTCTTGGAGGAGTGGTCTATGGAAAACCTGGAGGAAATTGCTCCTTCTGCCATCGCTGATGCTACAAAGATCTTTGTGAACGGCTGCTGGGTGGGCATACATCGTGATCCTGAGCAGCTCATGGCAACGCTTCGTAAGTTGCGTCGCCAGATGGATATCATCGTGTCAGAGGTGTCTATGATTCGAGACATTCGAGATCGTGAGATCCGAATCTATACAGATGCTGGTCGCATTTGTCGGCCACTTCTCATCGTGGAAAACGGATCGCTGCTGCTTAAAAAGACTCACGTGGAGATGTTAAAGGAGCGAGACTACAACAACTACAGTTGGCAGGTCCTTGTAGCCTCTGGAGTGGTGGAGTACATTGATACCCTTGAGGAGGAAACGGTCATGATCGCTATGTCTCCCTACGATCTGAAGCAGGACAAGGATTATGCTTATTGTACCACATACACACATTGTGAGATCCATCCAGCCATGATCCTGGGCGTGTGCGCGTCCATTATTCCCTTCCCCGATCACAATCAGAGTCCGCGTAACACCTATCAAAGCGCTATGGGTAAGTTTATGAGTATTCATTACTGTTCTACTTGAAATACTAATCCATTTATAACGTTTTTTTCATCTTTTATAGGTAAGCAAGCTATGGGCGTTTATATTACCAACTTCCACGTGCGTATGGACACACTAGCCCACGTACTTTACTATCCGATGAAGCCACTTGTGACCACACGTTCCATGGAGTACCTGCGTTTCCGAGAACTACCAGCTGGCATCAATTCAATCGTGGCTATTCTCTGCTACACTGGCTACAACCAGGAGGATTCTGTCATTCTGAATGCATCCGCTGTGGAGCGTGGATTCTTCCGCTCTGTGTTCTACCGATCATACAAGGATTCGGAGAACAAACGTGTCGGTGATCAGGAAGAGAACTTCGAGAAGCCTCATCGCGGCACCTGCCAAGGAATGAGAAATGCTCACTACGACAAGTTAGACGATGATGGAATTATTGCCCCAGGAATTCGTGTATCTGGCGACGATGTGGTTATTGGCAAGACCATTACCCTTCCTGAAAACGACGACGAACTGGACAGCAACACGAAGCGTTTCTCCAAACGAGATGCCTCCACTTTCCTGCGAAACTCTGAGACGGGTATTGTGGACCAGGTGATGCTTACGCTCAACAGCGAGGGCTACAAGTTCTGCAAGATTCGAGTGCGCTCGGTGCGTATTCCGCAGATCGGCGATAAGTTCGCTTCTCGTCACGGACAAAAGGGAACGTGCGGCATCCAGTACCGTCAGGAGGACATGGCCTTCACATGCGAGGGATTGGCACCCGATATCATTATTAACCCCCACGCTATCCCATCTCGTATGACAATTGGTCACTTGATCGAGTGTCTGCAGGGAAAACTGGGATCCAACAAGGGAGAGATCGGTGATGCTACACCCTTCAACGATGCCGTCAACGTGCAAAAGATCTCCACCTTCCTTCAGGAGTACGGCTATCATCTTCGAGGCAATGAGGTCATGTACAATGGCCACACTGGACGAAAGATTAATGCTCAGGTAAATTGCTTAACTTTCAACTTGCAATAATCTTAAACTAATCAGTCCCTTAACTACAGGTCTTCCTGGGGCCCACCTACTATCAGCGTCTTAAGCACATGGTGGACGACAAGATTCACTCTCGTGCTCGAGGCCCCGTCCAGATCCTGGTGCGTCAGCCTATGGAAGGTCGTGCTCGTGATGGTGGCTTGCGTTTCGGTGAGATGGAGCGTGATTGCCAGATCTCCCACGGCGCCGCTCAGTTCCTGCGAGAACGTTTATTCGAGGTCTCCGATCCGTACCGCGTACACATCTGCAACTTCTGTGGCCTGATTGCCATCGCCAATCTGCGCAACAATACGTTCGAGTGCAAGGGCTGCAAGAACAAGACGCAGATTTCCCAGGTGCGACTCCCATATGCGGCCAAGCTTCTCTTCCAGGAGCTGATGTCAATGAACATTGCGCCGCGCCTGATGGTCACCTAATCAGATCGGTATCCGCAACCGGACCACATAATAGCCCTAAGCTAAATGCTAGCAGTTAATTATTAAATTACCATAATTGTGACAACTCAATTATGTGCTTTGTGTGGCATTTTCTATTATTCCCGGAACTGGAGCGAATACCTGCCGAGCATTTTTAAAGACGCGAACGTGCCACAAGCGTATTTTGGGCGAAAGTCTGCACGGGTTCAAGAGCTGTTAGTGGAATGTGATTTATTTGCTTATTTGTAATAAGTTATTTTGCTCACAAACTTTTCTTGAGAGGGCAAATAGGGCATTGAAAGGTTTTGGTATTATTTGTGATTAAATTTTTGTTGGCAATTTAGTTGTCAATCCCTGTACGTTTTAGGACATC
>Dmel_Act5C
TTTCATATCACTACCGTTTGAGTTCTTGTGCTGTGTGGATACTCCTCCCGACACAAAGCCGCTCCATCAGCCAGCAGTCGTCTAATCCAGAGACACCAAACCGAAAGACTTAATTTATATTTATTTAATTAATTTTAATAAAACACACCAAATGTAAGTAGCTTTCCCCTTCCCAACAACAAAACACCATCGAACCACTCCCACCAAGAAAAAGCAATAATCGAGAAAAGCCGCGGAAAATGTGTGATTTTTTTTGTAAACAAAACATTTTTTTATGTGCCAGTGCTGAAAGTGATCAAAAAATACTAGCCACGAGCTAAAGAGTTATTGTATTGACCAAAACTCCAAAAATACCCAAGTTTGGCCCTAAATTGTCAATCAAAATACCAATAGGTCGAAAGACATCAAAATTAACAAAACCAGGGTTTCAAATACCATAACTCAAGAATCAGGATTACAACTGCAGATTTCAGGATATATACATACAAATTATACGAAATTATAAAAACCAAAGCAATTCAATAGCCCCAACTCAAATGTTAGGATCTAATATAGTGTTTAAAGCCAAGCTCGCTGATGTGGGCGTGTCACGATTTCACCCAAAGATATGCCAAATTACGAATTGCAAATCAATTCGCCAACACTTTCTTTTTTTCCCACGCCCTAAAACACCAGATCATCCATAAATGTACATACATACAGTATATGCATATTATAATCTGTAAAACTAGATCAGGTTCTTGAAAATAGTGACGTAGGCAGCCGTTTTGGCTGAAGCAGAAATTTTTGCCGGTTTTTCAAAGTTGTAGTTGCAAAAATGGAGAAAACCTTCGAGCATTCGTTCATATACACACACTCACGCGCAAAATAACGAGAGAGAGTGTATGTGTGTGTGAGAGAGCGAAAGCCAGACGACGGTTTGCTTTTCGCCTCGAAACATGACCATATATGGTCACAAAACTTGGCCGCCGCAATTCAACACACCAGCGCTCTCCTTCGCACCCATAGCGACCATGGCGCGGAGCGAGCGAGATGGCGAGAGCGAGCGACGCCTATGGCGACGTCGACGCAGGCAGCGATTGAAAAACGCAGTTAACTGGCATTCAACATTCACCAGCCACTTTCAGTCGGTTTATTCCAGTCATTCCTTTCAAACCGTGCGGTCGCTTAGCTCAGCCTCGCCACTTGCGTTTACAGTAGTTTTCACGCCTTGAATTTGTTAAATCGAACAAAAAGGTAAAGTTTAACTAGCTTTGAAAAGTTTCGTGGCTCTTAATTGTTAAATTTTCTAGAGTGCGTTTAGTGTTTTTTTTTTTTTTTATTTTGTAATGTTAATTTCGGGTTCCAATTCGAGTTTTAGGCAGCCGCCATTTTAAGGGCGCATACACACAGGCAACTGTGCTCTCTTTGCGGCTTTCTTTTGCACCGGCATTCGTTAAGTGTCGTCTAGAAGCTTCTCCCCTCCCTTTTCGGCATATTCGTATTGTGGTTTTAATTTTTCGGGGCGGGGCCTTCTATTTTGTAACTGTTCTTTTAATTTCTTATTACAATTCGATCGCAAGTGAAAATCAGTTTTCAATCGGAAAAGTATTTTTTTATGAAATTTTTTTTGTCCAAGATTAAAATTTTGTACTAAAAAAACGTACATTGCATTGAGTGATTTTTAATTGTACACGAAAAACAAGTTAGTTTGTTATGACAATTGTACTTTGGTAGACCAGCGCAGTCCAAGGAAACCACGCAAATTCTCAGTTTTTTTTTTGCCATTTCTACATTACCAAATAAGGTAACCAAAAACTAATGGGAAATCCGCATTCTTTCCATTGCAGCTTACAAAATGTGTGACGAAGAAGTTGCTGCTCTGGTTGTCGACAACGGCTCTGGCATGTGCAAGGCCGGATTTGCCGGAGACGATGCTCCCCGCGCCGTCTTCCCATCGATTGTGGGACGTCCCCGTCACCAGGGTGTGATGGTCGGCATGGGCCAGAAGGACTCGTACGTGGGTGATGAGGCGCAGAGCAAGCGTGGTATCCTCACCCTGAAGTACCCCATTGAGCACGGTATCGTGACCAACTGGGACGATATGGAGAAGATCTGGCACCACACCTTCTACAATGAGCTGCGTGTGGCACCCGAGGAGCACCCCGTGCTGCTGACCGAGGCCCCGCTGAACCCCAAGGCCAACCGTGAGAAGATGACCCAGATCATGTTCGAGACCTTCAACACACCCGCCATGTATGTGGCCATCCAGGCTGTGCTCTCGCTGTACGCCTCCGGTCGTACCACCGGTATCGTTCTGGACTCCGGCGATGGTGTCTCCCACACCGTGCCCATCTACGAGGGTTATGCCCTTCCCCATGCCATCCTGCGTCTGGATCTGGCTGGTCGCGATTTGACCGACTACCTGATGAAGATCCTGACCGAGCGCGGTTACTCTTTCACCACCACCGCTGAGCGTGAAATCGTCCGTGACATCAAGGAGAAGCTGTGCTATGTTGCCCTCGACTTTGAGCAGGAGATGGCCACCGCTGCCAGCAGCTCCTCGTTGGAGAAGTCCTACGAGCTGCCCGACGGACAGGTGATCACCATCGGCAACGAGCGTTTCCGCTGCCCCGAGGCCCTGTTCCAGCCCTCGTTCTTGGGAATGGAGGCTTGCGGCATCCACGAGACCACCTACAACTCCATCATGAAGTGTGATGTGGATATCCGTAAGGATCTGTATGCCAACACCGTGCTGTCCGGTGGCACCACCATGTACCCTGGCATCGCCGACCGTATGCAGAAGGAGATCACCGCCCTGGCACCGTCGACCATGAAGATCAAGATCATTGCCCCGCCAGAGCGCAAGTACTCTGTCTGGATCGGTGGCTCCATCCTGGCTTCGCTGTCCACCTTCCAGCAGATGTGGATCTCCAAGCAGGAGTACGACGAGTCCGGCCCCTCCATTGTGCACCGCAAGTGCTTCTAAGAAGGATCGCTTGTCTGGGCAAGAGGATCAGGATCGGGATGGTCTTGATTCTGCTGGAGGAGGAGGAGGAGAAGTCGAGGAAGCAGCAGCGAAAGTGCAAGTGCGAGTGGTGGAAGTTTGGAGTGCAGCACAACAAAATCAACAACAACACCAACTACAAGATGAAAAGAGCGGAACCACCTGCACACCATCATCATTATCATCATCGTTTTGGGCGCATGTTGTGTGGTTCCAGCGTATTAATATAATTAATTTATTCCACATGAGATATGATATGATATACTATGTATTTTTTGTTTTTTTTTTATTTGTAAACCTTTAATATAACAAGAACTACAAAAAATGAAAATGAGCGAAAATGCATATTCTGCCATTCCACACACACACCAACAACACCCAACACACGCACACCCACAAGCTTACACACACACATTCGCGGCATGACAAGGACATCAAGATAAAGAAGAACTTAAAGAAGATATTTCCCAAAGCGCAAAAAGAACACACACACATTGCAAAACACAAACAACACACTAGCGTTTTGTACAATTCGTCAGCAACCTTATGTATTATTTTTTAATTATGATGTAATTATAAACAAAGTGAAACAAAAATATGAAAACAAAAAGGAAAATCAAATCTGTCTTCTCTTTCTCCCGCTCTCCTCGCTCTCTGCTGCTAACCTCGCCCTCTCCTCTCTCATCTTTTTGTCTGTCTCTCTTCCACATTTTTGCCGGCCGGCAAAATAATAACCCACACACACTCACACTTGGCTGCAGTTTCGCGTGCGATATTCACACACATTCAAGCATACAAGCATACATACATATGTATTTTTTTTTTATTTGTACACTTTTCTAATTGCATGCGTATCGATTGATAAGTTTACGCCTGAAAATGTTAATTAAAATGTGAAAATGCAACTGAAAAACTGATGAAATGAAACAACAACAAGCGAACAATTTGCTACATGTGTATTGTCTAACAACCGTTACTGCAACGGTTGCTTCGGAAAAGGGTGAAGAGGAAGAGGGCACGAGGTCGACGAACTAAGGCTGCGACGACAAGCGGCTGTCTCGCTCGCACGCACGCACGCATGCGGGCTAATGATGCGATTAAAGTGCCGTTTTAAATGGCCAAGATCCAAATAAAAGTCGAGATAATAAGGCAAACACGCTAACACAAATCGCTGGCATAGTTTCATCCGCCAGTTTGGCCAAAAGCAGCGGCTGCAAGCGCCGTTTATCCGGTTTTTCCCAAACATTTTCCATTCATGCGGCCAAAGAGGAGGAGCACCCATCTTTCCATCTTTCTCTGACTCGCACGGGCAATGCAGTGCACCGGAAAGAAAGTGGTGCGAATTGGGATTTATAGACTTACTTTATAGACTTACACGTACAAATATACATAGATATTATATTATTTAAATACATTTTTATTATATTGCTTATATATTAGTTCGACTTCGATATCATTTCTGCCAGTATAATTATGGGCTCTGCTTGATTTGGCGCTCGGATGCTACGGTAAAAGTTATCTTTCTGTGCTTTCTCCTTTGATTCTTGAGTTTC
>Dmel_piwi
TCACACTGAGTCCAAAGCGTCGTTTTCAAAGTACTCTTTCAGTTTCCATTGTGAAGTTTTAAGTGATCGCGAGTGCCAAAAAGTAACAATGGCTGATGATCAGGGACGTGGACGCAGGCGTCCACTTAACGAAGATGATTCCTCTACTTCCCGAGGTAGTGGTGATGGGCCGGTATGTAAACTCTTATTCAAGCTAGGAAAAAAAATCATAGCGGTAAAGCAAATTCCTTATAATTCCGTTATGTCGCAAACACAAACACAGCCATGTACATAGATTGTAAATGCGCGCATTTCTTCGGAATTCGACACCAAAAGGAAGCACTAAAACTAACAAACAAAAATCTGCTATGAATTTGAGCTTGACTGCATAAAATCTTCTTGAATTTCTGTTGACCAAGCACTTTTTTCAAAGGGAATTCATTAAACATATTTCCAAAAACGCTTCTTTCAATTTGAATTTCCAAGGAAATGTAAAGCATTATCTGTTTCGTTTCATTTATTTTTTTTTAATAAAAACTGCTAAAATAACCATCACCTGACAGGAAGGTGGCTGTGGCAAGCCGAATCTTATTTACCCTTGCAGTCTATGTCTTTGGAATCTGCATGCCCGACGTTGATATGGACGGACATGACCAAATGGACCCGGCTAGTGATACTCATCAAAAATCATGGTCGGAAACGCTTCCTTCTATCTGTCACATACATTTGATTCCTAGAAACTCTACGAGTAACGGGTATTTCTCCGATATTCATCCCAATTCTATACAACTTTGAGATGGCTTTCAGCATTGATATACTCTGAAATTGCAGGCAAAGCATACTACAAAAACTATTTTTTACCATTTTTTTTCTGCTTCATCTTTGATTATGAGTAACAATATTTTCGTAGCTTGACCGTTAGTTTTATGATTTAAAATCTGTCGTACTTTAGGTAGTTGTTTAAATGGCTCACATTTAGGAATCACAACTATTTGTTTAAACCCCTTAATATTTTTTCTTTTAATAATAAATAATAAACAGGTAATACTTTTTGATTGTTCATCGCGATTGTTTTCAATGTACAAAGTTGAGTCTTTCTGGTGTTTATTGCTGTCTCGTGTTTATTGCTGAATCTCGCACGATCTCTCTCTTTCTTCTATGTTATTTTTTCCATCGGCGTCAATTATTCATAACTGCCGCTAGGTGGAGCTAGTGTGCAGTCATTCACTTCTATTAGGAGACAGCGTCCTCTATATCTAATATTATAATTTTTTTTAAATGAGTAACTTACATCATTTAATGCTTTCATGCAGCGGGTGAAAGTATTCAGAGGATCTTCATCAGGTGACCCGAGAGCGGATCCTCGTATAGAGGCTTCAAGAGAGAGAAGAGCTCTCGAGGAAGCTCCCAGGCGTGAAGGTGGCCCGACAGAGCGAAAGCCGTGGGGTGACCAATATGATTACCTGAATACCCGTCCGGCTGAGCTGGTATCCAAGAAGGGAACCGATGGCGTCCCGGTCATGCTGCAGACGAACTTTTTCCGATTAAAAACCAAGCCGGAATGGCGGATCGTTCATTATCACGTGGAGTTTGAGCCGAGCATCGAGAATCCTCGTGTCCGTATGGGAGTTTTGTCCAATCATGCTAACCTTCTGGGATCAGGCTATCTATTCGATGGACTGCAACTGTTCACCACCAGGAAATTCGAGCAGGAAATCACGGTGCTCAGCGGAAAGTCGAAGCTGGACATTGAATACAAGATATCCATAAAGTTCGTTGGATTCATATCGTGTGCTGAGCCCCGCTTTTTGCAAGTCTTAAATCTAATATTGCGCCGCTCCATGAAGGGCCTAAATTTGGAATTAGTTGGCCGTAATCTCTTTGATCCCCGAGCTAAGGTAATTTCTTTTGGTATCGTTTTAAGTGCTGTTTGGTCAAATATGATTTATTTTAGATCGAAATAAGGGAGTTCAAAATGGAGCTATGGCCGGGCTATGAGACATCGATTCGTCAGCACGAAAAAGATATTTTATTGGGCACCGAAATAACTCACAAAGTTATGCGCACCGAGACGATCTACGACATAATGCGACGTTGCTCACACAATCCGGCTCGTCATCAGGACGAAGTACGGGTAAATGTTTTGGACTTGATTGTCCTTACGGATTACAATAACAGAACTTATCGTATCAATGATGTCGACTTTGGACAAACTCCGAAATCAACATTCAGTTGCAAGGGTAGAGATATCAGTTTCGTGGAATACTATCTCACTGTAAGTCTAATATTTACCACGGATATACATCGGCGTCTTATTTCTCCCAACATTTGTTCTCTTTAGAAATATAATATACGCATTCGCGACCACAATCAGCCGCTGCTGATCTCCAAAAATAGGGACAAGGCTCTAAAAACTAACGCTAGCGAATTAGTGGTACTAATTCCTGAGCTCTGCCGAGTGACTGGGCTCAATGCCGAGATGCGCTCAAACTTTCAGTAAGACTTTAAACTATATTTAAATTAACAAGCTCTTGTGTCGCAAACTATCTATTTCTTAAGTTATATTCTGTGTATCCTTTCTTTACATGACTAAAACTATATTAATTTCGCTAGTCCGTCCGATTCTTGACCTGTTTGGAGTCAACGAGTTCATGCCGATCGGTTCGAAAAAACTTCTTACTGTTTGCAAACCTGAGATTACCTCCTTATCCCAGTAGACTAATGTTATTACAATAGAACTAATAACTAATAAGACTAATATGAGATAGAATTATTCCCCGACTATCAGATACCCGTTACTCAGCTAGTGGAACGGTAATTTTCATCATTTTTCTGTGGTATCGATAGATATTGAGGAATAAAATGAGAACATTTTTTAAAAATTTAAAACTAAAATTTTAAAAGTCTGGTCGTGACCGTTTTGGCCGTTTCGTATGTGAAATGAGAGGCGCGGCTAAAGTGTTTTAGCTATACAAATAAAAATAGGCAAGACAAACAATAAAACGAAGAAAAATCTGAGCACTTTTCAAAAGTGTGGGCGTGGCAGTTTAGGGCGGTTTTATGGCCCATAAAAAATGTAATATTTAATTATTATAAACAGGCTTATGCGTGCCATGAGCAGTTATACGCGAATGAACCCCAAACAACGCACTGATCGATTGCGCGCTTTTAACCACCGTTTACAAAACACTCCAGAAAGTGTGAAGGTCTTGAGAGACTGGAACATGGAACTGGACAAGAACGTCACAGAAGTACAAGGCCGGATAATTGGACAGCAGAACATCGTGTTTCATAATGGAAAGTGAGTTGAGCAAGTTAAGAGCACTGCAAGTTTATAGTTAATAATTTTTTCAGGGTTCCTGCTGGAGAAAACGCTGATTGGCAAAGGCACTTCAGAGACCAAAGGATGCTTACCACTCCGAGCGATGGCCTCGATCGTTGGGCTGTCATCGCGCCGCAAAGGAATTCCCATGAACTCCGAACTCTACTTGACTCTTTGTATAGAGCAGCTAGTGGAATGGGTCTTAGAATTCGAAGCCCCCAGGAGTGAGTTTTTATAAAAAAACACGTATACCTCACATTACGTCTTTACTTAATTCGTAAAGAGAGGTTTCGTGCTTCGTTTTCTGGGTATATATCCACTTTAACTATCGTTTTACAAACAGATTCATAATTTATGATGATCGCACTGGAACTTATGTGAGAGCAATGGATGATTGTGTGCGCTCAGATCCCAAACTTATATTATGCCTCGTACCCAATGATAACGCCGAAAGGTATTTATTCCCTAATAAGTGTACAAATCTAAACTTAATGACTATATTTATCGAAGACATTGTTTAATTTTGGTACACTAAAGTTAATATAAATGAAAGTACTGAAGTAAACCTTTTTATTTTAGATACTCATCAATCAAAAAGAGAGGATACGTTGACAGGGCGGTGCCAACTCAAGTTGTGACCCTTAAAACGACCAAGAACCGTAGCCTTATGAGCATTGCCACCAAAATAGCAATCCAACTGAATTGCAAGTTGGGATATACACCCTGGATGATCGAACTACCCTTGTCCGGACTGATGACAATTGGCTTTGACATTGCGAAGAGCACACGAGATCGGAAGAGGGCCTACGGAGCATTGATTGCCTCAATGGATCTACAGCAAAACTCCACGTACTTCAGCACAGTCACGGAGTGCAGCGCCTTTGATGTGCTCGCTAACACCCTTTGGCCGATGATAGCAAAGGCCCTGCGCCAATATCAACATGAGCATAGGAAGCTGCCATCTCGAATCGTATTTTATCGAGACGGTGTGAGCTCCGGCTCTCTAAAGCAGCTTTTTGAATTTGAAGTCAAGGACATCATTGAGAAGTTGAAAACTGAATACGCCCGCGTCCAGCTAAGCCCACCGCAATTAGCTTATATTGTGGTAACCAGATCCATGAACACGCGCTTCTTCCTCAACGGACAAAATCCTCCGCCTGGTACTATAGTTGATGACGTTATAACTCTGCCCGAGAGATACGACTTTTATCTGGTCTCGCAACAAGTTCGTCAGGGTACAGTGTCGCCGACCAGCTACAATGTTCTTTATAGCAGCATGGGTCTCTCACCGGAGAAAATGCAAAAACTTACGTACAAGATGTGCCACTTGTACTACAATTGGTCGGGCACCACACGAGTGCCAGCAGTTTGCCAGTACGCTAAGAAGCTAGCTACCCTCGTGGGTACGAACTTGCACTCTATTCCGCAAAACGCGCTCGAAAAGAAGTTTTATTATCTATAATTGGATATAATTTAGAATGGAGTATTAATCCTTACTAAGAGGCCATATATGAAACTAGCCCAGACATTTATACTTTTTCAATACTTTCTTACTTTTGCTAAGCACTTCAGCATTTATGACTAAATATTTTGTATTTGAAATGCATTACTGCTCTTTTTTCAAACAAAAGCAAAATTGAGGATTAAGATTCTGGTATTTAAGCATAAGACCAGAGGAAATTCCCAAACAAACATTTAAAGTTATCTATCAAGACATGTTCATTAATTTGGAATATAATTACTTTATTTTTTATTGTATATTTTAGTTTATGTAAAGAAAAATTACATACATCCATGTTTGCTTACTTAACCACACATTCATGGCTGCTTATATTCGTGAAACATATTTTATTAATTATACAGGTATTTAACTTTCACAAGGATAATACAATTTCATAGCTTGTTGAGTATACTG
>Dmel_p53
CCTGGAGCACGGAAGATTCTTGCGGACACAAATCGCAACTGCTAAATAAAATTTATTTATTTGAGTGCACAGCCATGAGTCTTCACAAGTCCGCGTCGTTTAGCTTGACTTTTAACCAGTGAGCGGAGATATTTTATTCGGTCTTACCCAACAAAATAATGTTGCGCCTTTTTGCAGAAACACTTCGATTGTTTCGCGTAGCAATAGTCGCACAATTTTTGAAGCTTTCAAGGAGTTCCTGGATTTTTGGGATATCGGCAACGAAGTTTCTGCAGAGTCAGCAGTTCGGGTCTCCAGCAACGGAGCTTTCAACTTGCCGCAGAGTTTTGGCAACGAATCCAACGAATATGCCCACCTGGCTACGCCTGTGGATCCAGCCTACGGAGGCAACAACACGAACAACATGATGCAGTTCACGAACAATCTGGAAATTTTGGCCAACAATAATTCCGATGGCAATAACAAAATTAATGCATGCAACAAATTCGTCTGCCACAAGGGGTGAGCAAATTCAAAACACGCGCTCCAATCGATAAACATTGGCTACGGCGATTGTTCGCGCTGCGTGGCGAATGGCAAAATCCAAATAGTCGGTGGCCACTACGATTCTGTAGTTTTTTGTTAGCGAATTTTTAATATTTAGCCTCCTTCCCCAACAAGATCGCTTGATCAGATATAGCCGACTAAGATGTATATATCACAGCCAATGTCGTGGCACAAAGAAAGGTACAGTGCGGCAACAAATTGATGATCGAACAGTAGAAACCTTGCATGTAGCAACACGCTTGTACTTGCATCATTCGCGCGGCCAACTTGTTTGTGTTTGTTTATCCAGCCAAGGCGCAGTTTGCCACTAAGTTTTTATTTCCCTTTTACACTTTAGCACTGATTCCGAGGATGACTCCACGGAGGTCGATATCAAGGAGGATATTCCGAAAACGGTGGAGGTATCGGGATCGGAATTGTGAGTACCTGGTCACGTGGTCACATGTGGTTTGCCTGGTTGCTAACTATTATTGTTTTTATTATTCCAGGACCACGGAACCCATGGCCTTCTTGCAGGGATTAAACGTGAGTTGTGCTTTTAATGTGCAAAGCTATAGCTTACTAACTATTTAATATTATTCCCCGCAGTCCGGGAATCTGATGCAGTTCAGCCAGGTGGGTAACATCGATTAGCTATTGCATCTTGAAGCGCTGGGACAGATCGGCCTGCACGAGGATCAGCAGGAAGCTGGCCACCGCCGAGAAGACATTGCTGATCAGTCGCATGTCCAGCTCGTACAAGCCCAAGGGTTTAATTTGGTACTTGGTCACCGTGACCAGCAGAGTAAAGCCGTGGACTGCCTGACGGTAGCGGCTGTCCGCATGCTGGAGATTCATCTCCTGGAGAATGACTGCCGATCTTCGGGTGGCCACCAATAGGTGGTTGCACAAATGCGTGAGCAATGTGATCTCCGCCAGCGAGATGGAGAGGAAAACCAGATTGATCAGCGATCCAAGACCATCGTACGGCTTGCCCATGATTAAGGTGTCCGCTATGGCATAGTACAGACTGTAGAAACCCACCGTTATTCCGAGCAGGTGGCATATGAGCGACAGAATCATGGACAAGGACATTGGGGTCAGATACTTTCCCGAATGCACATATATCAACCTATAGCGATACGCCAGCTGGTCGAGTTCATCCGCCAAGGCGCAAAATCGCTGCATGCGGTAGTATTTAGTGTACAACTTTAGCTGGTCCTTCCTCTGCAGCAGATTCACCTCCTGCAGCTGCGCTTCCAGCCGTCTGTTCAGAGCGTACAGAATCTCCTTCACCACCACCATTGCGCCAAAGTAGCAGTTATTGAGAAAATTCGAAATAATTAAGGGAAACAGCCGGTACAAGGTCCAGATCAAGCTCATCTCGGGATGCTGCCGCCTCTGTTGCAGTATGAAAGCCACTTCAATTGTTAGAGGAAAAGCCACGGTCTTGACCAGAGCCAAAACGATGGATATGTACAGCGACCTGCTGTCCAGACGGAATTCTTTTAGGGTATCAAAGAAGGGCACTTTGCTCAACACCTTGGCCACATGGTCACTGATTATCATTTGCGACACATAGTTAATAACAGCCACCGTAATGTTCATATAGCTGTACAGAGTGGTGGCGTCCTTCAGGTTGATCTGACCCTCCTGGTACTCCTTGTAGATTTGCCGCCCGTAAACCAAGCTGAATGCAATTGCCCACAGCGAAGCAAAGGCCAGATTTGCCTTTGAGAAGCGGAATCTTTCACGACGGCCCGCCCGATATCGATTGGCCAGGAGTCCGAAGACGGTCATAAAGCCTATCAGTATGATCGTCAGAAATTTCACCATACGCCGATGCGCGTAGTCGCTGGTGAAGTCCATTTCTCTCGAACAATTAATACAAACTGTGAGCGCACTTTCCACAGCATTAATATCTGCTTAATTGTTTTCCAACTACCCAACTGATGCCATCTAGAGGACCTGTCAAGTAGCCGGACACTATCGGGACACATCGCGAAACGCATGTATTTCACCGGCCGTCCAGAAACCAACTGAGCATGCGTTGTGCTACTACTAGCCACAAACAAAAGAGCATAAGAAGCGTGAGGGAAGCGGCATTCCTTGCGTGACTCAGCCGCTGCCTGCAATTTCATAAGAGCGACATGACGTCAAAGTCGCTTCGAAGTTCACTTTCAGTTGGAGGACAGAACAAAACACTCTTATCTAGCCGATTAGCACGGTGCACTCCTTCCCGTCGTCATCGTTTAGCGAGAATTTCAAGCACTTGTGAAAAATAGAATAGAATACAAAACAAATCGCCAGTCCATTTGTAACTCGAGCAAGCTGGAACATGAAGCTCTATCAGCTCTATGAGCGCAAAGTGTGAACCCTTATATGATTGCGAGTTAAGTTGACATTCAAATAATATCTTGTTTTTGCTTACAGCAATCCGTGCTGCGCGAAATGATGCTGCAGGACATTCAGATCCAGGCGAACACGCTGCCCAAGCTAGAGAATCACAACATCGGTGGTTATTGCTTCAGCATGGTTCTGGATGAGCCGCCCAAGTCTCTTTGGATGTACTCGATTCCGCTGAACAAGCTCTACATCCGGATGAACAAGGCCTTCAACGTGGACGTTCAGTTCAAGTCTAAAATGCCCATCCAACCACTTAATTTGCGTGTGTTCCTTTGCTTCTCCAATGATGTGAGTGCTCCCGTGGTCCGCTGTCAAAATCACCTTAGCGTTGAGCCTTGTAAGTGAAGATAACAATACAGATCGAACAGGATTATTTAACTATCATTTGTACAAACCTTTAGTGACGGCCAATAACGCAAAAATGCGCGAGAGCTTGCTGCGCAGCGAGAATCCCAACAGTGTATATTGTGGAAATGCTCAGGGCAAGGGAATTTCCGAGCGTTTTTCCGTTGTAGTCCCCCTGAACATGAGCCGGTCTGTAACCCGCAGTGGGCTCACGCGCCAGACCCTGGCCTTCAAGTTCGTCTGCCAAAACTCGTGTATCGGGCGAAAAGAAACTTCCTTAGTCTTCTGCCTGGAGAAAGCATGGTAAGGTGACAGCAAAACTCTAGATGGCTAGAACAAAGCTTAACGTGTTTTCTTTCTTGCAGCGGCGATATCGTGGGACAGCATGTTATACATGTTAAAATATGTACGTGCCCCAAGCGGGATCGCATCCAAGACGAACGCCAGCTCAATAGCAAGAAGCGCAAGTCCGTGCCGGAAGCCGCCGAAGAAGATGAGCCGTCCAAGGTGCGTCGGTGCATTGCTATAAAGACGGAGGACACGGAGAGCAATGATAGCCGAGACTGCGACGACTCCGCCGCAGAGTGGAACGTGTCGCGGACACCGGATGGCGATTACCGTCTGGCTATTACGTGCCCCAATAAGGAATGGCTGCTGCAGAGCATCGAGGGCATGATTAAGGAGGCGGCGGCTGAAGTCCTGCGCAATCCCAACCAAGAGAATCTACGTCGCCATGCCAACAAATTGCTGAGCCTTAAGAGTAAGCAGTGAATCGGAGGACAAAGAGATTAAGCTTTACTTACCGAACTTTCCTTTCAGAACGTGCCTACGAGCTGCCATGACTTCTGATCTGGTCGACAATCTCCCAGGTATCAGATACCTTTGAAATGTGTTGCATCTGTGGGGTATACTACATAGCTATTAGTATCTTAAGTTTGTATTAGTCCTTGTTCGTAAGGCGTTTAACGGTGATATTCCCCTTTTGGCATGTTCGATGGCCGAAAAGAAAACATTTTTATATTTTTGATAGTATACTGTTGTTAACTGCAGTTCTATGTGACTACGTAACTTTTGTCTACCACAACAAACATACTCTGTACAAAAAAGCCAAAAGTGAATTTATTAAAGAGTTGTCATATTTTGCAAACAT
"""



class Config:

    def __init__(self, args_debug: SimpleNamespace = None):
        """
        Initialise a configuration object for the experiment
        :param args_debug: Optionally passing in arguments for debugging
        """
        # get default args by giving empty list
        self._get_parser()
        args = self.parser.parse_args([])
        if args_debug:
            for key, val in args_debug.__dict__.items():
                setattr(args, key, val)
        else:
            # if debug args are not given, grab them from the command line
            args = self.parser.parse_args()
        self.args = args
        # load input files and assign other args
        self._load_preliminaries()
        logging.info(f"Starting analysis of TEs in the following sequence files:")
        for i in self.input:
            logging.info(str(i))
        # log some other basic info
        logging.info(f"using TE reference sequences in:\t{self.args.library}")
        logging.info(f"running analysis against these selected reference sequences:\t{self.args.families}")


    def _get_parser(self) -> None:
        """
        Initialise arguments and parse from command line
        :return:
        """
        parser = argparse.ArgumentParser()
        parser.add_argument('--input', help='Input file(s) to be analysed. Can be *.fastq, *.fa, or directory of files. Optionally gzipped.', default=None)
        parser.add_argument('--preset', help='Minimap2 mapping preset. (sr, map-ont, map-pb, map-hifi) [sr]', choices=["sr", "map-ont", "map-pb", "map-hifi"], default="sr")
        parser.add_argument('--library', default=None, help='Path to reference library. Defaults to drosophila transposons from https://github.com/bergmanlab/drosophila-transposons')
        parser.add_argument('--annotation', default=None, help='Path to annotation (gff) of sequences in library. Defaults to drosophila TE annotation from https://github.com/bergmanlab/drosophila-transposons')
        parser.add_argument('--min_align_len', default=1, help='Minimum length of valid alignments')
        parser.add_argument('--families', nargs='*', help="Which transposon families to analyse. Default: all sequences in library.", default=None)
        norm_group = parser.add_mutually_exclusive_group()
        norm_group.add_argument('--rpm', default=False, action='store_true', help='normalize all abundances by reads per million')
        norm_group.add_argument('--single_copy_genes', nargs='*', help='space-separated names of single-copy genes in reference to use for normalisation', default=None)
        self.parser = parser


    def _determine_input(self) -> None:
        """
        Determine the type of input and glob all input files
        :return:
        """
        # load input files
        if not self.args.input:
            raise ValueError("No input specified. Exiting")
        inp = Path(self.args.input)
        # put together suffixes for sequence files
        seq_files = ['.fq', '.fa', '.fastq', '.fasta']
        seq_files += [i + '.gz' for i in seq_files] + [i + '.gzip' for i in seq_files]
        # input can either be a file
        if inp.is_file():
            # input can be a single file
            if set(inp.suffixes).intersection(seq_files):
                self.input = [inp]
            else:
                raise FileNotFoundError(f"Input file needs to be one of: {seq_files}")
        # input can also be a directory
        elif inp.is_dir():
            globbings = []
            for suf in seq_files:
                globbings.extend(inp.glob(f'*{suf}'))
            # if sequence files have been found return them
            if globbings:
                self.input = list(globbings)
                return
            else:
                raise FileNotFoundError(f"No sequence files found in input directory. Exiting")
        # no valid input was given
        else:
            raise FileNotFoundError(f"Input is neither file or directory. Exiting")


    def _fetch_transposon_library(self) -> None:
        """
        If no sequence library is given, we download the default one for Dmel
        :return:
        """
        # constants, version might need to be adjusted in the future
        repo = "https://raw.githubusercontent.com/bergmanlab/drosophila-transposons/master/releases/"
        version = "v10.2"
        fname = f"transposon_sequence_set_{version}"
        # grab the files using requests
        te_fa = requests.get(f"{repo}/{fname}.fa")
        te_gff = requests.get(f"{repo}/{fname}.gff")
        # check that download was successful
        assert te_fa.status_code == 200
        assert te_gff.status_code == 200
        # make sure the lengths correspond to expectations
        assert len(te_fa.text) == 814098
        assert len(te_gff.text) == 188966
        # write the contents to file
        with open(Path(f"{fname}.fa"), 'w') as te_seqs:
            te_seqs.write(te_fa.text)
        # write annotations to file
        with open(Path(f"{fname}.gff"), 'w') as te_annot:
            te_annot.write(te_gff.text)
        # add the sequences of the single copy genes to the library
        with open(Path(f"{fname}.fa"), 'a') as te_seqs:
            te_seqs.write(SCG)
        # save filenames as attributes
        self.args.library = f'{fname}.fa'
        # if no annotations are given
        # then also use the default annotation file
        if not self.args.annotation:
            self.annotation = f'{fname}.gff'
            self.args.annotation = f'{fname}.gff'


    def _get_library_seqs(self) -> dict[str, str]:
        """
        Load the sequences from the library fasta file
        :return: dictionary of id: sequence
        """
        invalid_chars = '/\`*|;":. ' + "'"
        library = dict()
        with open(self.args.library, 'r') as fa:
            for header, seq in read_fa(fa):
                header = header[1:]  # remove >
                # make sure headers don't contain any invalid characters
                if any(x in header for x in invalid_chars):
                    for c in invalid_chars:
                        header = header.replace(c, '-')
                library[header] = seq
        return library


    def _check_refs_avail(self, query_seqs: list) -> None:
        """
        Check if query sequences are available in the library sequences
        :param query_seqs: List of sequence identifiers
        :return:
        """
        for f in query_seqs:
            if f not in self.sequences.keys():
                raise ValueError(f'No sequence found for: {f}')


    def _load_preliminaries(self) -> None:
        """
        Initialise the resources and files needed for the experiment
        :return:
        """
        # initialise a log file
        init_logger(logfile="deviate.log", args=self.args)
        # grab the input data, can be different shapes and filetypes
        self._determine_input()
        # grab input and resources
        if not self.args.library:
            # if no references are given, fetch from gitHub
            self._fetch_transposon_library()
        # load the library sequences
        if not Path(self.args.library).is_file():
            raise FileNotFoundError("Given library file does not exist")
        self.sequences = self._get_library_seqs()
        # if no reference sequences are selected for analysis, use all of them
        if not self.args.families:
            self.args.families = list(self.sequences.keys())
        # check if the sequences of families can be loaded
        self._check_refs_avail(query_seqs=self.args.families)
        # if selected, check that single copy genes for normalisation are available
        if self.args.single_copy_genes:
            self._check_refs_avail(query_seqs=self.args.single_copy_genes)






